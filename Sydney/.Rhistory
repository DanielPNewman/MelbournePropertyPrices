"06-1995",        "09-1995",        "12-1995",        "03-1996",        "06-1996",        "09-1996",
"12-1996",        "03-1997",        "06-1997",        "09-1997",        "12-1997",        "03-1998",
"06-1998",        "09-1998",        "12-1998",        "03-1999",        "06-1999",        "09-1999",
"12-1999",        "03-2000",        "06-2000",        "09-2000",        "12-2000",        "03-2001",
"06-2001",        "09-2001",        "12-2001",        "03-2002",        "06-2002",        "09-2002",
"12-2002",        "03-2003",        "06-2003",        "09-2003",        "12-2003",        "03-2004",
"06-2004",        "09-2004",        "12-2004",        "03-2005",        "06-2005",        "09-2005",
"12-2005",        "03-2006",        "06-2006",        "09-2006",        "12-2006",        "03-2007",
"06-2007",        "09-2007",        "12-2007",        "03-2008",        "06-2008",        "09-2008",
"12-2008",        "03-2009",        "06-2009",        "09-2009",        "12-2009",        "03-2010",
"06-2010",        "09-2010",        "12-2010",        "03-2011",        "06-2011",        "09-2011",
"12-2011",        "03-2012",        "06-2012",        "09-2012",        "12-2012",        "03-2013",
"06-2013",        "09-2013",        "12-2013",        "03-2014",        "06-2014",        "09-2014",
"12-2014",        "03-2015",        "06-2015",        "09-2015",        "12-2015",        "03-2016",
"Property Type", "state",        "lat",          "lon")
#melt from wide to long format
property_1991_2016<-property_1991_2016 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
property_1991_2016$Year<-parse_date_time(property_1991_2016$Year, "my")
property_1991_2016<- property_1991_2016 %>% arrange(Year) %>% mutate(Year=as.character(Year))
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1000, ani.height = 500, interval = 0.5)
#Note to run the animation you will have to instal Imagemagik from http://www.imagemagick.org/script/binary-releases.php
# when you install Imagemagik remember to select the "instal legacy files" option so convert.exe is included
#Set working directory where this script and the raw excel file are saved
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices/Sydney")
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggmap", "readr", "ggplot2", "dplyr", "readxl","tidyr",
"stringr", "gganimate","animation")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
###Load Map
# Can download using get_map function:
Sydney <- get_map(location = 'Sydney, Australia', zoom = 11, maptype="terrain")
# But I saved it to workind directory so can load it and work offline:
# load("Sydney.rda")
###Load Apartment price data
# Got this data here http://www.housing.nsw.gov.au/about-us/reports-plans-and-papers/rent-and-sales-reports/issue-116
# ...but saved it to workind directory so can load it and work offline
all_dwellings<-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=2) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="all dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
non_strata_dwellings <-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=3) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="non strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
strata_dwellings<- read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=4) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
# assuming that "-" and "0" means data not available (NA),
all_dwellings[all_dwellings == 0] <- NA
all_dwellings[all_dwellings == "-"] <- NA
non_strata_dwellings[non_strata_dwellings == 0] <- NA
non_strata_dwellings[non_strata_dwellings == "-"] <- NA
strata_dwellings[strata_dwellings == 0] <- NA
strata_dwellings[strata_dwellings == "-"] <- NA
# row bind them all together
property_1991_2016<- bind_rows(all_dwellings, non_strata_dwellings, strata_dwellings)  %>%
mutate(suburb= str_to_upper(suburb))
## Read in the lat/long data:
# Also saved it to workind directory so can load it and work offline:
lat_long<-read_csv("Australian_Post_Codes_Lat_Lon.csv")  %>%
mutate(postcode=as.character(postcode)) %>%
distinct() %>%
select(-dc, -type) %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
#create VIC only lat_long
NSW_lat_long<- lat_long %>%
filter(state=="NSW") %>%
select(-postcode) %>%
distinct() %>%
filter(suburb %in%  property_1991_2016$suburb)
#Merge NSW_lat_long into property_1991_2016
property_1991_2016<- full_join(property_1991_2016, NSW_lat_long,  by=c("suburb"))
rm(NSW_lat_long)
names(property_1991_2016) <- c(  "suburb",        "03-1991",        "06-1991",        ",09-1991",        "12-1991",        "03-1992",
"06-1992",        "09-1992",        "12-1992",        "03-1993",        "06-1993",        "09-1993",
"12-1993",        "03-1994",        "06-1994",        "09-1994",        "12-1994",        "03-1995",
"06-1995",        "09-1995",        "12-1995",        "03-1996",        "06-1996",        "09-1996",
"12-1996",        "03-1997",        "06-1997",        "09-1997",        "12-1997",        "03-1998",
"06-1998",        "09-1998",        "12-1998",        "03-1999",        "06-1999",        "09-1999",
"12-1999",        "03-2000",        "06-2000",        "09-2000",        "12-2000",        "03-2001",
"06-2001",        "09-2001",        "12-2001",        "03-2002",        "06-2002",        "09-2002",
"12-2002",        "03-2003",        "06-2003",        "09-2003",        "12-2003",        "03-2004",
"06-2004",        "09-2004",        "12-2004",        "03-2005",        "06-2005",        "09-2005",
"12-2005",        "03-2006",        "06-2006",        "09-2006",        "12-2006",        "03-2007",
"06-2007",        "09-2007",        "12-2007",        "03-2008",        "06-2008",        "09-2008",
"12-2008",        "03-2009",        "06-2009",        "09-2009",        "12-2009",        "03-2010",
"06-2010",        "09-2010",        "12-2010",        "03-2011",        "06-2011",        "09-2011",
"12-2011",        "03-2012",        "06-2012",        "09-2012",        "12-2012",        "03-2013",
"06-2013",        "09-2013",        "12-2013",        "03-2014",        "06-2014",        "09-2014",
"12-2014",        "03-2015",        "06-2015",        "09-2015",        "12-2015",        "03-2016",
"Property Type", "state",        "lat",          "lon")
#melt from wide to long format
property_1991_2016<-property_1991_2016 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
property_1991_2016$Year<-parse_date_time(property_1991_2016$Year, "my")
property_1991_2016<- property_1991_2016 %>% arrange(Year) %>% mutate(Year=as.character(Year))
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1000, ani.height = 500, interval = 0.5)
#Note to run the animation you will have to instal Imagemagik from http://www.imagemagick.org/script/binary-releases.php
# when you install Imagemagik remember to select the "instal legacy files" option so convert.exe is included
#Set working directory where this script and the raw excel file are saved
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices/Sydney")
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggmap", "readr", "ggplot2", "dplyr", "readxl","tidyr",
"stringr", "gganimate","animation")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
###Load Map
# Can download using get_map function:
Sydney <- get_map(location = 'Sydney, Australia', zoom = 10, maptype="terrain")
# But I saved it to workind directory so can load it and work offline:
# load("Sydney.rda")
###Load Apartment price data
# Got this data here http://www.housing.nsw.gov.au/about-us/reports-plans-and-papers/rent-and-sales-reports/issue-116
# ...but saved it to workind directory so can load it and work offline
all_dwellings<-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=2) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="all dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
non_strata_dwellings <-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=3) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="non strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
strata_dwellings<- read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=4) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
# assuming that "-" and "0" means data not available (NA),
all_dwellings[all_dwellings == 0] <- NA
all_dwellings[all_dwellings == "-"] <- NA
non_strata_dwellings[non_strata_dwellings == 0] <- NA
non_strata_dwellings[non_strata_dwellings == "-"] <- NA
strata_dwellings[strata_dwellings == 0] <- NA
strata_dwellings[strata_dwellings == "-"] <- NA
# row bind them all together
property_1991_2016<- bind_rows(all_dwellings, non_strata_dwellings, strata_dwellings)  %>%
mutate(suburb= str_to_upper(suburb))
## Read in the lat/long data:
# Also saved it to workind directory so can load it and work offline:
lat_long<-read_csv("Australian_Post_Codes_Lat_Lon.csv")  %>%
mutate(postcode=as.character(postcode)) %>%
distinct() %>%
select(-dc, -type)
#create VIC only lat_long
NSW_lat_long<- lat_long %>%
filter(state=="NSW") %>%
select(-postcode) %>%
distinct() %>%
filter(suburb %in%  property_1991_2016$suburb)
#Merge NSW_lat_long into property_1991_2016
property_1991_2016<- full_join(property_1991_2016, NSW_lat_long,  by=c("suburb"))
rm(NSW_lat_long)
names(property_1991_2016) <- c(  "suburb",        "03-1991",        "06-1991",        ",09-1991",        "12-1991",        "03-1992",
"06-1992",        "09-1992",        "12-1992",        "03-1993",        "06-1993",        "09-1993",
"12-1993",        "03-1994",        "06-1994",        "09-1994",        "12-1994",        "03-1995",
"06-1995",        "09-1995",        "12-1995",        "03-1996",        "06-1996",        "09-1996",
"12-1996",        "03-1997",        "06-1997",        "09-1997",        "12-1997",        "03-1998",
"06-1998",        "09-1998",        "12-1998",        "03-1999",        "06-1999",        "09-1999",
"12-1999",        "03-2000",        "06-2000",        "09-2000",        "12-2000",        "03-2001",
"06-2001",        "09-2001",        "12-2001",        "03-2002",        "06-2002",        "09-2002",
"12-2002",        "03-2003",        "06-2003",        "09-2003",        "12-2003",        "03-2004",
"06-2004",        "09-2004",        "12-2004",        "03-2005",        "06-2005",        "09-2005",
"12-2005",        "03-2006",        "06-2006",        "09-2006",        "12-2006",        "03-2007",
"06-2007",        "09-2007",        "12-2007",        "03-2008",        "06-2008",        "09-2008",
"12-2008",        "03-2009",        "06-2009",        "09-2009",        "12-2009",        "03-2010",
"06-2010",        "09-2010",        "12-2010",        "03-2011",        "06-2011",        "09-2011",
"12-2011",        "03-2012",        "06-2012",        "09-2012",        "12-2012",        "03-2013",
"06-2013",        "09-2013",        "12-2013",        "03-2014",        "06-2014",        "09-2014",
"12-2014",        "03-2015",        "06-2015",        "09-2015",        "12-2015",        "03-2016",
"Property Type", "state",        "lat",          "lon")
#melt from wide to long format
property_1991_2016<-property_1991_2016 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
property_1991_2016$Year<-parse_date_time(property_1991_2016$Year, "my")
property_1991_2016<- property_1991_2016 %>% arrange(Year) %>% mutate(Year=as.character(Year))
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1000, ani.height = 500, interval = 0.5)
#Note to run the animation you will have to instal Imagemagik from http://www.imagemagick.org/script/binary-releases.php
# when you install Imagemagik remember to select the "instal legacy files" option so convert.exe is included
#Set working directory where this script and the raw excel file are saved
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices/Sydney")
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggmap", "readr", "ggplot2", "dplyr", "readxl","tidyr",
"stringr", "gganimate","animation")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
###Load Map
# Can download using get_map function:
Sydney <- get_map(location = 'Sydney, Australia', zoom = 11, maptype="terrain")
# But I saved it to workind directory so can load it and work offline:
# load("Sydney.rda")
###Load Apartment price data
# Got this data here http://www.housing.nsw.gov.au/about-us/reports-plans-and-papers/rent-and-sales-reports/issue-116
# ...but saved it to workind directory so can load it and work offline
all_dwellings<-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=2) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="all dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
non_strata_dwellings <-read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=3) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="non strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
strata_dwellings<- read_excel("12.-Sales_GMR_Trend91q1-16q1.xls", sheet=4) %>%
distinct() %>%
rename(suburb=`Area/Ring/SA`) %>%
mutate(`Property Type`="strata dwellings") %>%
mutate_all(str_trim) #Trim whitespace from start and end of all observations
# assuming that "-" and "0" means data not available (NA),
all_dwellings[all_dwellings == 0] <- NA
all_dwellings[all_dwellings == "-"] <- NA
non_strata_dwellings[non_strata_dwellings == 0] <- NA
non_strata_dwellings[non_strata_dwellings == "-"] <- NA
strata_dwellings[strata_dwellings == 0] <- NA
strata_dwellings[strata_dwellings == "-"] <- NA
# row bind them all together
property_1991_2016<- bind_rows(all_dwellings, non_strata_dwellings, strata_dwellings)  %>%
mutate(suburb= str_to_upper(suburb))
## Read in the lat/long data:
# Also saved it to workind directory so can load it and work offline:
lat_long<-read_csv("Australian_Post_Codes_Lat_Lon.csv")  %>%
mutate(postcode=as.character(postcode)) %>%
distinct() %>%
select(-dc, -type)
#create VIC only lat_long
NSW_lat_long<- lat_long %>%
filter(state=="NSW") %>%
select(-postcode) %>%
distinct() %>%
filter(suburb %in%  property_1991_2016$suburb)
#Merge NSW_lat_long into property_1991_2016
property_1991_2016<- full_join(property_1991_2016, NSW_lat_long,  by=c("suburb"))
rm(NSW_lat_long)
names(property_1991_2016) <- c(  "suburb",        "03-1991",        "06-1991",        ",09-1991",        "12-1991",        "03-1992",
"06-1992",        "09-1992",        "12-1992",        "03-1993",        "06-1993",        "09-1993",
"12-1993",        "03-1994",        "06-1994",        "09-1994",        "12-1994",        "03-1995",
"06-1995",        "09-1995",        "12-1995",        "03-1996",        "06-1996",        "09-1996",
"12-1996",        "03-1997",        "06-1997",        "09-1997",        "12-1997",        "03-1998",
"06-1998",        "09-1998",        "12-1998",        "03-1999",        "06-1999",        "09-1999",
"12-1999",        "03-2000",        "06-2000",        "09-2000",        "12-2000",        "03-2001",
"06-2001",        "09-2001",        "12-2001",        "03-2002",        "06-2002",        "09-2002",
"12-2002",        "03-2003",        "06-2003",        "09-2003",        "12-2003",        "03-2004",
"06-2004",        "09-2004",        "12-2004",        "03-2005",        "06-2005",        "09-2005",
"12-2005",        "03-2006",        "06-2006",        "09-2006",        "12-2006",        "03-2007",
"06-2007",        "09-2007",        "12-2007",        "03-2008",        "06-2008",        "09-2008",
"12-2008",        "03-2009",        "06-2009",        "09-2009",        "12-2009",        "03-2010",
"06-2010",        "09-2010",        "12-2010",        "03-2011",        "06-2011",        "09-2011",
"12-2011",        "03-2012",        "06-2012",        "09-2012",        "12-2012",        "03-2013",
"06-2013",        "09-2013",        "12-2013",        "03-2014",        "06-2014",        "09-2014",
"12-2014",        "03-2015",        "06-2015",        "09-2015",        "12-2015",        "03-2016",
"Property Type", "state",        "lat",          "lon")
#melt from wide to long format
property_1991_2016<-property_1991_2016 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
property_1991_2016$Year<-parse_date_time(property_1991_2016$Year, "my")
property_1991_2016<- property_1991_2016 %>% arrange(Year) %>% mutate(Year=as.character(Year))
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1000, ani.height = 500, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1000, ani.height = 500, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 1991-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney.gif', ani.width = 1500, ani.height = 500, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 1991-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney2.gif', ani.width = 150, ani.height = 50, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 1991-2016 \n")
p1 <- + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
#Save the .gif to working directory
gg_animate(p1, 'Sydney2.gif', ani.width = 150, ani.height = 50, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 1991-2016 \n")
p1 <- p1 +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
gg_animate(p1, 'Sydney.gif', ani.width = 900, ani.height = 300, interval = 0.5)
gg_animate(p1, 'Sydney2.gif', ani.width = 900, ani.height = 300, interval = 0.5)
p1<-ggmap(Sydney) +
geom_point(data = property_1991_2016,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(5, 20), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Sydney Property Prices ($) from 1991-2016 \n")
p1 <- p1 +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.position="right")
gg_animate(p1, 'Sydney2.gif', ani.width = 900, ani.height = 300, interval = 0.5)

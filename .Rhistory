28*2
(70/5)*3
47*8
12*47
50*16
26*5
16*50
(36*47)*52
(36*47)*48
80000/5
50*8
57*8
.27*2000
.27*2500
.27*2500
44.44*40
327-298
29/6
(1994.96-20)/4
(1994.96-20)/4.08
1000*.048
90/4
21*53.45
515*310
515*310
515*31
38-33
(38-33)/38
(38-33)/33
910*1.435
6684/4
3.0825*616
3.0825*161
355*3.2475
((3.0825*161)+(355*3.2475))/(161+355)
((3.0825*161)+(355*3.2475))/(161+355)*100
332231000/13003159
74+16
17+73
262
2^2
2^-2
2^(1/2)
2^(-2)
library(zoo)
? plot.zoo
(60-11)/11
23/97
6/97
(5*5+1*20)/6
11/18
55/45
45/55
100000*.0021
.72/53
(.72/53)*100
(.72/51)*100
65/.72
90*50
0.01+0.04+0.04+21.64+32.19+16.30+37.62+20.90+42.78+23.77+41.67+32.15
81.86+58029+222.86.51.43
81.86+58.29+222.86+51.43
(81.86+58.29+222.86+51.43)-(24.56+17.49+66.86+10.03)
(81.86+58.29+222.86+51.43)
(81.86+58.29+222.86+51.43)-(24.56+17.49+66.86+10.03)
5759.58-823.77
5229.13-832.77
18+23.4
.3*83.51
(.3*83.51)
(.3*83.51)+83.51
(.3*83.51)
(.3*83.51)+83.51
108.563*.3
108.563*.7
83.51/.3
(83.51/.3)/2
((83.51/.3)/2)*.7
((83.51/.3)/2)*.3
(((83.51/.3)/2)*.3)
(83.51/.3)/2
x<-(83.51/.3)/2
tax<-.3*x
x-tax
119.3-(.3*119.3)
83.51/.7
rm(tax)
rm(x)
119.3-83.51
4279.84
/55
4279.84/55
Sys.Date()
? as.charcter
as.character(Sys.Date())
setwd(("C:/GitHub/Vokke"))
warnings()
70+18+5
install.packages("mongolite")
library(mongolite)
m <- mongo(collection = "diamonds")
m <- mongo(collection = "diamonds")
system(paste('"C:/Program Files/MongoDB/Server/3.2/bin/mongod.exe"'))
system(paste('"C:/Program Files/MongoDB/Server/3.2/bin/mongo.exe"'))
dim(flights)
library(nycflights13)
dim(flights)
#> [1] 336776     19
head(flights)
filter(flights, month == 1, day == 1)
library(dplyr)
filter(flights, month == 1, day == 1)
arrange(flights, year, month, day)
n(filter(flights, month == 1, day == 1))
filter(flights, month == 1, day == 1) %>% n()
filter(flights, month == 1, day == 1)
? n
filter(flights, month == 1, day == 1) %>% n()
filter(flights, month == 1, day == 1) %>% n(.)
? count
filter(flights, month == 1, day == 1) %>% count()
arrange(flights, desc(arr_delay))
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
select(flights, year, month, day)
select(flights, carrier, distance)
? unique
unique(flights$carrier)
colnames(flights)
unique(flights$carrier)
distinct(flights$carrier)
distinct(flights$carrier)
distinct(flights, carrier)
flights %>% distinct(carrier)
flights %>% filter(distance==300) distinct(carrier)
library(dplyr)
flights %>% filter(distance==3000) %>% distinct(carrier)
flights %>% filter(distance==3000)
flights %>% filter(distance==3000) %>% distinct(carrier)
flights %>% filter(distinct(carrier))
flights %>% filter(., distinct(carrier))
flights %>% filter(distance==3000) %>% distinct(carrier)
flights %>% filter(distance==3000)
library(nycflights13)
flights %>% filter(., distinct(carrier)) %>% distinct(carrier)
unique(flights$carrier)
head(flights)
dan<-flights
View(dan)
View(dan)
colnames(flights)
flights %>% group_by(carrier) %>% summarise(count=n(), average=mean(distance))
? ntile
flights %>% ntile(distance, 27)
flights %>% ntile(distance)
flights %>% ntile(distance)
ntile(1:2000)
ntile(1:2000, 100)
ntile(1:2000, 10)
? read_excel
18*2
172/2
172/2
350/4
350/70
55-39
(.30-.275)*6500
((.30-.275)*6500)-40
((.30-.285)*6500)-40
((.30-.28)*6500)-40
((.30-.285)*6500)-40
((.30-.275)*6500)-40
((.30-.275)*6500)-40
((.285-.275)*6500)-40
((.28-.275)*6500)-40
install.packages("eechidna")
data(nat_data)
library(eechidna)
library(dplyr)
library(ggplot2)
data(nat_map)
data(nat_data)
adelaide <- aec_extract_f(nat_data, ctr=c(138.6, -34.9), expand=c(2,3))
View(nat_data)
ggplot(data=nat_map) +
geom_polygon(aes(x=long, y=lat, group=group, order=order),
fill="grey90", colour="white") +
geom_point(data=adelaide, aes(x=long_c, y=lat_c), size=2, alpha=0.4,
colour="#f0027f") +
xlim(c(136, 142)) + ylim(-36, -33) +
coord_equal()
data(aec2013_2cp_electorate
)
View(adelaide)
aec2013_2cp_electorate<-aec2013_2cp_electorate
View(nat_map)
View(aec2013_2cp_electorate)
library(ggplot2)
aec2013_2cp_electorate %>% ggplot(aes(Surname , TotalVotes)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(Electorate , TotalVotes)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(OrdinaryVotes , TotalVotes)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(OrdinaryVotes , TotalVotes)) + geom_point(colour=PartyNm)
aec2013_2cp_electorate %>% ggplot(aes(OrdinaryVotes , TotalVotes, colour=PartyNm)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(PrePollVotes , PostalVotes, colour=PartyNm)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, PostalVotes)) + geom_point()
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, PostalVotes)) + geom_boxplot()
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, TotalVotes)) + geom_boxplot()
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, TotalVotes)) + geom_boxplot() + facet_wrap(~Electorate)
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, TotalVotes, colour=PartyNm)) + geom_boxplot() + facet_wrap(~Electorate)
? facet_wrap
aec2013_2cp_electorate %>% ggplot(aes(PartyNm, TotalVotes, colour=PartyNm)) + geom_boxplot() + facet_wrap(~Electorate, scales="free")
View(abs2011)
aec2013_2cp_electorate %>% ggplot(aes(Swing, PartyNm, colour=PartyNm)) + geom_boxplot() + facet_wrap(~Electorate, scales="free")
data(nat_map)
# choropleth map with Census data
nat_map$region <- nat_map$ELECT_DIV
data(abs2011)
abs2011$region <- abs2011$Electorate
library(ggplot2)
library(ggthemes)
both <- intersect(unique(abs2011$region), unique(nat_map$region))
ggplot(aes(map_id=region), data=subset(abs2011, region %in% both)) +
geom_map(aes(fill=MedianIncome), map=subset(nat_map, region %in% both)) +
expand_limits(x=nat_map$long, y=nat_map$lat) +
theme_map()
data(nat_data)
nat_map$region <- nat_map$ELECT_DIV
data(abs2011)
abs2011$region <- abs2011$Electorate
both <- intersect(unique(abs2011$region), unique(nat_map$region))
data(nat_data)
library(ggplot2)
library(ggthemes)
ggplot(aes(map_id=region), data=subset(abs2011, region %in% both)) +
geom_map(aes(fill=MedianIncome), map=subset(nat_map, region %in% both)) +
expand_limits(x=nat_map$long, y=nat_map$lat) +
theme_map()
data(nat_map)
# choropleth map with Census data
nat_map$region <- nat_map$ELECT_DIV
data(abs2011)
abs2011$region <- abs2011$Electorate
library(ggplot2)
library(ggthemes)
both <- intersect(unique(abs2011$region), unique(nat_map$region))
ggplot(aes(map_id=region), data=subset(abs2011, region %in% both)) +
geom_map(aes(fill=MedianIncome), map=subset(nat_map, region %in% both)) +
expand_limits(x=nat_map$long, y=nat_map$lat) +
theme_map()
launchApp(
age = c("Age20_24", "Age85plus"),
religion = c("Christianity", "Catholic", "NoReligion"),
other = c("Unemployed", "Population", "MedianIncome")
)
data(hexDat)
library(plotly)
p <- ggplot(hexDat, aes(xcent, ycent, text = Electorate)) +
geom_hex(stat = "identity") +
lims(x=c(-80, 8), y=c(-40, 50))
ggplotly(p, tooltip = "text")
url <- "national-esri-16122011/COM20111216_ELB_region.shp"
electorates <- getElectorateShapes(url)
library(ggplot2)
ggplot(data=electorates$data) +
geom_map(aes(fill=AREA_SQKM, map_id=id), map=electorates$map) +
expand_limits(
x=range(electorates$map$long),
y=rang
e(electorates$map$lat)
)
url <- "national-esri-16122011/COM20111216_ELB_region.shp"
electorates <- getElectorateShapes(url)
library(ggplot2)
ggplot(data=electorates$data) +
geom_map(aes(fill=AREA_SQKM, map_id=id), map=electorates$map) +
expand_limits(
x=range(electorates$map$long),
y=range(electorates$map$lat)
)
library(dplyr)
library(ggplot2)
data(nat_map)
data(nat_data)
adelaide <- aec_extract_f(nat_data, ctr=c(138.6, -34.9), expand=c(2,3))
ggplot(data=nat_map) +
geom_polygon(aes(x=long, y=lat, group=group, order=order),
fill="grey90", colour="white") +
geom_point(data=adelaide, aes(x=long_c, y=lat_c), size=2, alpha=0.4,
colour="#f0027f") +
xlim(c(136, 142)) + ylim(-36, -33) +
coord_equal()
library(dplyr)
library(ggplot2)
data(nat_map)
data(nat_data)
cities <- list(c(151.2, -33.8), # Sydney
c(153.0, -27.5), # Brisbane
c(145.0, -37.8), # Melbourne
c(138.6, -34.9), # Adelaide,
c(115.9, -32.0)) # Perth
expand <- list(c(2,3.8), c(2,3), c(2.6,4.1), c(4,3), c(12,6))
nat_carto <- purrr::map2(.x=cities, .y=expand,
.f=aec_extract_f, aec_data=nat_data) %>%
purrr::map_df(aec_carto_f) %>%
mutate(region=as.integer(as.character(region))) %>%
rename(id=region)
nat_data_cart <- aec_carto_join_f(nat_data, nat_carto)
# Map theme
theme_map <- theme_bw()
theme_map$line <- element_blank()
theme_map$strip.text <- element_blank()
theme_map$axis.text <- element_blank()
theme_map$plot.title <- element_blank()
theme_map$axis.title <- element_blank()
theme_map$panel.border <- element_rect(colour = "grey90", size=1, fill=NA)
ggplot(data=nat_map) +
geom_polygon(aes(x=long, y=lat, group=group, order=order),
fill="grey90", colour="white") +
geom_point(data=nat_data_cart, aes(x=x, y=y), size=2, alpha=0.4,
colour="#572d2c") +
geom_text(data=nat_data_cart, aes(x=x, y=y, label=id), size=0.5) +
coord_equal() + theme_map
library(dplyr)
library(ggplot2)
data(nat_map)
data(nat_data)
adelaide <- aec_extract_f(nat_data, ctr=c(138.6, -34.9), expand=c(2,3))
ggplot(data=nat_map) +
geom_polygon(aes(x=long, y=lat, group=group, order=order),
fill="grey90", colour="white") +
geom_point(data=adelaide, aes(x=long_c, y=lat_c), size=2, alpha=0.4,
colour="#f0027f") +
xlim(c(136, 142)) + ylim(-36, -33) +
coord_equal()
library(dplyr)
library(ggplot2)
data(nat_map)
data(nat_data)
cities <- list(c(151.2, -33.8), # Sydney
c(153.0, -27.5), # Brisbane
c(145.0, -37.8), # Melbourne
c(138.6, -34.9), # Adelaide,
c(115.9, -32.0)) # Perth
expand <- list(c(2,3.8), c(2,3), c(2.6,4.1), c(4,3), c(12,6))
nat_carto <- purrr::map2(.x=cities, .y=expand,
.f=aec_extract_f, aec_data=nat_data) %>%
purrr::map_df(aec_carto_f) %>%
mutate(region=as.integer(as.character(region))) %>%
rename(id=region)
nat_data_cart <- aec_carto_join_f(nat_data, nat_carto)
# Map theme
theme_map <- theme_bw()
theme_map$line <- element_blank()
theme_map$strip.text <- element_blank()
theme_map$axis.text <- element_blank()
theme_map$plot.title <- element_blank()
theme_map$axis.title <- element_blank()
theme_map$panel.border <- element_rect(colour = "grey90", size=1, fill=NA)
ggplot(data=nat_map) +
geom_polygon(aes(x=long, y=lat, group=group, order=order),
fill="grey90", colour="white") +
geom_point(data=nat_data_cart, aes(x=x, y=y), size=2, alpha=0.4,
colour="#572d2c") +
geom_text(data=nat_data_cart, aes(x=x, y=y, label=id), size=0.5) +
coord_equal() + theme_map
(.935-.765)/.765
(.935-.765)/.765
((.935-.765)/.765)*100
((.935-.765)/.765)*100
((.935-.765)/.765)*100
20000*1.22222
((24444.4-20000)/20000)*100
((24444.4-20000)/20000)*100
((24444.4-20000)/20000)*100
? apply
? lapply
library(gganimate)
library(gapminder)
library(animation)
library(ggplot2)
ani.options(convert = shQuote("C:/Program Files/ImageMagick-7.0.3-Q16/magick.exe"))
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent, frame = year)) +
geom_point() +
scale_x_log10()
gg_animate(p)
gg_animate(p)
ani.options(convert = shQuote("\\C:/Program Files/ImageMagick-7.0.3-Q16/magick.exe"))
gg_animate(p)
? shQuote
shQuote("C:/Program Files/ImageMagick-7.0.3-Q16/magick.exe")
shQuote("asdf","asdf","fgj")
? Sys.setenv
Sys.setenv(PATH = paste("C:/Program Files/ImageMagick-7.0.3-Q16",
Sys.getenv("PATH"), sep = ";"))
gg_animate(p)
Sys.setenv(PATH = paste("C:\Program Files\ImageMagick-7.0.3-Q16",
Sys.getenv("PATH"), sep = ";"))
Sys.setenv(PATH = paste("c:/Program Files/ImageMagick-7.0.3-Q16",
Sys.getenv("PATH"), sep = ";"))
gg_animate(p)
gg_animate(p)
library(gganimate)
library(gapminder)
library(animation)
library(ggplot2)
gg_animate(p)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent, frame = year)) +
geom_point() +
scale_x_log10()
gg_animate(p)
Sys.setenv(PATH = paste("c:/Program Files/ImageMagick-7.0.3-Q16/",
Sys.getenv("PATH"), sep = ";"))
gg_animate(p)
View(animation::im.convert)
gg_animate(p)
#Set working directory where this script and the raw excel file are saved
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices")
library(ggmap)
library(readr)
library(ggplot2)
library(plotly)
library(knitr)
library(dplyr)
library(tidyr)
library(lubridate)
library(readxl)
library(stringr)
library(maptools)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
#Load Maps
load("Melbourne.rda")
#Load Unit price data
suburb_unit_2015<-read_excel("suburb_unit_2015.xls", col_names=F, skip = 3) %>%
na.omit() %>%
distinct() %>%
mutate(`Property Type`="Unit")
#Load House Price Data and row bind it to unit price data
property_2005_2015<-read_excel("suburb_house_2015.xls", col_names=F, skip = 3) %>%
na.omit() %>%
distinct() %>%
mutate(`Property Type`="House") %>%
bind_rows(suburb_unit_2015)
rm(suburb_unit_2015)
#rename the columns
names(property_2005_2015)<-c("suburb", 2005:2015, "Prelim 2016", "Change 2014-2015", "Change 2005-2015", "Growth PA 2005-2015","Property Type")
# assuming that "-" and "0" means data not available (NA),
property_2005_2015[property_2005_2015 == 0] <- NA
property_2005_2015[property_2005_2015 == "-"] <- NA
#Read in the lat/long data
lat_long<-read_csv("Australian_Post_Codes_Lat_Lon.csv")  %>%
mutate(postcode=as.character(postcode)) %>%
distinct() %>%
select(-dc, -type)
#create VIC only lat_long
VIC_lat_long<- lat_long %>%
filter(state=="VIC") %>%
select(-postcode) %>%
distinct() %>%
filter(suburb %in%  property_2005_2015$suburb)
#Merge VIC_lat_long into property_2005_2015
property_2005_2015<- full_join(property_2005_2015, VIC_lat_long,  by=c("suburb"))
rm(VIC_lat_long)
#melt from wide to long format
property_2005_2015<-property_2005_2015 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`, -`Change 2014-2015`, -`Change 2005-2015`, -`Growth PA 2005-2015`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
p1<-ggmap(Melbourne) +
geom_point(data = property_2005_2015,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`)
ggtitle("Median Melbourne Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
legend.position="right")
p1
p1<-ggmap(Melbourne) +
geom_point(data = property_2005_2015,
aes(x =lon, y= lat, frame = Year, size=`Median Price ($)`,
colour = `Median Price ($)`), alpha=.75, shape="$") +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(4, 14), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Median Melbourne Property Prices ($) from 2005-2016 \n")
p1 <- p1 + theme(aspect.ratio=1) +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
strip.text.x = element_text(size=12, face="bold"),
legend.position="right")
p1
gg_animate(p1, 'output.gif', ani.width = 1000, ani.height = 1000, interval = 0.75)
library(gganimate)
library(animation)

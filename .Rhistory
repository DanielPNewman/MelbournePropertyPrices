plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$: ", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(mapping=aes(colour=state,
tooltip=state)) +
geom_point_interactive(mapping=aes(colour=state,
tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=state)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
? summarise
? mean
df<-data_frame(state=rep(c("New South Wales",
"Victoria",
"Queensland",
"Western Australia",
"South Australia",
"Tasmania"), 36)) %>%
group_by(state) %>%
mutate(year=c(rep(2012, 9), rep(2013,9),rep(2014, 9),rep(2015, 9))) %>%
group_by(state, year) %>%
mutate(`store ID` = str_c("shop_#",as.character(seq_along(state)))) %>%
group_by(state, year, `store ID`) %>%
mutate(`Revenue ($)` =  ifelse(state=="New South Wales", sample(x=c(1000000:9000000), 1),
ifelse(state=="Victoria", sample(x=c(1000000:7000000), 1),
ifelse(state=="Queensland", sample(x=c(1000000:5000000), 1),
ifelse(state=="Western Australia",sample(x=c(100000:2000000), 1),
ifelse(state=="South Australia",sample(x=c(100000:900000), 1),
ifelse(state=="Tasmania", sample(x=c(100000:2000000), 1), NA))))))) %>%
group_by(state, year) %>%
mutate(`State Total Revenue ($)` = sum(`Revenue ($)`))
View(df)
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Create the text you want displayed in the tooltop for
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Make the plot, replacing 'geom_boxplot' and 'geom_point' with 'geom_boxplot_interactive' and 'geom_point_interactive'
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=tooltip_boxplot)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
head(df)
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggplot2", "stringr", "ggiraph", "dplyr")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
#Make up some fake data
df<-data_frame(state=rep(c("New South Wales",
"Victoria",
"Queensland",
"Western Australia",
"South Australia",
"Tasmania"), 36)) %>%
group_by(state) %>%
mutate(year=c(rep(2012, 9), rep(2013,9),rep(2014, 9),rep(2015, 9))) %>%
group_by(state, year) %>%
mutate(`store ID` = str_c("shop_#",as.character(seq_along(state)))) %>%
group_by(state, year, `store ID`) %>%
mutate(`Revenue ($)` =  ifelse(state=="New South Wales", sample(x=c(1000000:9000000), 1),
ifelse(state=="Victoria", sample(x=c(1000000:7000000), 1),
ifelse(state=="Queensland", sample(x=c(1000000:5000000), 1),
ifelse(state=="Western Australia",sample(x=c(100000:2000000), 1),
ifelse(state=="South Australia",sample(x=c(100000:900000), 1),
ifelse(state=="Tasmania", sample(x=c(100000:2000000), 1), NA))))))) %>%
group_by(state, year) %>%
mutate(`State Total Revenue ($)` = sum(`Revenue ($)`))
head(df)
#Create the text you want displayed in the tooltop for geom_point_interactive
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
#Create the text you want displayed in the tooltop for geom_boxplot_interactive
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Make plot reactive to user's mouse with
#'geom_boxplot_interactive' and 'geom_point_interactive'
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=tooltip_boxplot)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
? kable
kable(head(df))
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggplot2", "stringr", "knitr", "dplyr", "ggiraph")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
kable(head(df))
library(ggiraph)
? geom_point_interactive
? geom_point_interactive
? ggiraph
1*1.5
9*1.5
5*1.5
? ggmap
library(ggmap)
? ggmap
ggmap(get_map(), base_layer = ggplot(aes(x = x, y = y), data = df), extent = "normal") +
geom_point(colour = "red")
df <- data.frame(
x = rnorm(1000, -95.36258, .2),
y = rnorm(1000,  29.76196, .2)
)
ggmap(get_map(), base_layer = ggplot(aes(x = x, y = y), data = df)) +
geom_point(colour = "red")
ggmap(get_map(), base_layer = ggplot(aes(x = x, y = y), data = df), extent = "normal") +
geom_point(colour = "red")
ggmap(get_map(), maprange = TRUE, extent = "normal",
base_layer = ggplot(aes(x = x, y = y), data = df)) +
geom_point(colour = "red")
ggmap(get_map(), base_layer = ggplot(aes(x = x, y = y), data = df), extent = "device") +
geom_point() +  facet_wrap(~ year)
df <- data.frame(
x = rnorm(10*100, -95.36258, .075),
y = rnorm(10*100,  29.76196, .075),
year = rep(paste("year",format(1:10)), each = 100)
)
ggmap(get_map(), base_layer = ggplot(aes(x = x, y = y), data = df)) +
geom_point() +  facet_wrap(~ year)
p2<-ggmap(Melbourne, extent = "normal", base_layer = ggplot(aes(x = lon, y = lat), data = property_2005_2015)) +
geom_point_interactive(data = property_2005_2015,
aes(x =lon, y= lat, size= `Change 2005-2015 (%)`,
colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=.5) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(1, 6), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Change in Median Melbourne \n Property Prices ($) from 2005-2015 \n") +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(face="bold"),
legend.text = element_text(face = "bold"),
strip.text.x = element_text(face="bold"),
plot.title = element_text(face = "bold"),
legend.position="right")
ggiraph(code = {print(p2)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7)
df <- data.frame(
x = rnorm(10*100, -95.36258, .05),
y = rnorm(10*100,  29.76196, .05),
year = rep(paste("year",format(1:10)), each = 100)
)
for(k in 0:9){
df$x[1:100 + 100*k] <- df$x[1:100 + 100*k] + sqrt(.05)*cos(2*pi*k/10)
df$y[1:100 + 100*k] <- df$y[1:100 + 100*k] + sqrt(.05)*sin(2*pi*k/10)
}
ggmap(get_map(),
base_layer = ggplot(aes(x = x, y = y), data = df)) +
stat_density2d(aes(fill = ..level.., alpha = ..level..),
bins = 4, geom = "polygon") +
scale_fill_gradient2(low = "white", mid = "orange", high = "red", midpoint = 10) +
scale_alpha(range = c(.2, .75), guide = FALSE) +
facet_wrap(~ year)
levels(violent_crimes$month) <- paste(
toupper(substr(levels(violent_crimes$month),1,1)),
substr(levels(violent_crimes$month),2,20), sep = ""
)
houston <- get_map(location = "houston", zoom = 14, source = "osm", color = "bw")
HoustonMap <- ggmap(houston,
base_layer = ggplot(aes(x = lon, y = lat), data = violent_crimes)
)
HoustonMap +
stat_density2d(aes(x = lon, y = lat, fill = ..level.., alpha = ..level..),
bins = I(5), geom = "polygon", data = violent_crimes) +
scale_fill_gradient2("Violent\nCrime\nDensity",
low = "white", mid = "orange", high = "red", midpoint = 500) +
labs(x = "Longitude", y = "Latitude") + facet_wrap(~ month) +
scale_alpha(range = c(.2, .55), guide = FALSE) +
ggtitle("Violent Crime Contour Map of Downtown Houston by Month") +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10))
#Note to run the animation you will have to instal Imagemagik from http://www.imagemagick.org/script/binary-releases.php
# when you install Imagemagik remember to select the "instal legacy files" option so convert.exe is included
#Set working directory where this script and the raw excel file are saved
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices")
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggmap", "readr", "ggplot2", "dplyr", "readxl","tidyr",
"stringr", "gganimate","animation","ggiraph")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
###Load Map
# Can download using get_map function:
# Melbourne <- get_map(location = 'Melbourne, Australia', zoom = 10, maptype="terrain")
# But I saved it to workind directory so can load it and work offline:
load("Melbourne.rda")
###Load Apartment price data
# Got this data here http://www.dtpli.vic.gov.au/property-and-land-titles/property-information/property-prices ...
# ...but saved it to workind directory so can load it and work offline
suburb_Apartment_2015<-read_excel("suburb_unit_2015.xls", col_names=F, skip = 3) %>%
na.omit() %>%
distinct() %>%
mutate(`Property Type`="Apartment")
#Load House Price Data and row bind it to Apartment price data
property_2005_2015<-read_excel("suburb_house_2015.xls", col_names=F, skip = 3) %>%
na.omit() %>%
distinct() %>%
mutate(`Property Type`="House") %>%
bind_rows(suburb_Apartment_2015)
rm(suburb_Apartment_2015)
#rename the columns
names(property_2005_2015)<-c("suburb", 2005:2015, "Prelim 2016", "Change 2014-2015 (%)", "Change 2005-2015 (%)", "Growth (%) PA 2005-2015","Property Type")
# assuming that "-" and "0" means data not available (NA),
property_2005_2015[property_2005_2015 == 0] <- NA
property_2005_2015[property_2005_2015 == "-"] <- NA
## Read in the lat/long data:
# Also saved it to workind directory so can load it and work offline:
lat_long<-read_csv("Australian_Post_Codes_Lat_Lon.csv")  %>%
mutate(postcode=as.character(postcode)) %>%
distinct() %>%
select(-dc, -type)
#create VIC only lat_long
VIC_lat_long<- lat_long %>%
filter(state=="VIC") %>%
select(-postcode) %>%
distinct() %>%
filter(suburb %in%  property_2005_2015$suburb)
#Merge VIC_lat_long into property_2005_2015
property_2005_2015<- full_join(property_2005_2015, VIC_lat_long,  by=c("suburb"))
rm(VIC_lat_long)
property_2005_2015 <- property_2005_2015 %>%
mutate(`Change 2014-2015 (%)` = as.numeric(`Change 2014-2015 (%)`),
`Change 2005-2015 (%)` = as.numeric(`Change 2005-2015 (%)`),
`Growth (%) PA 2005-2015` = as.numeric(`Growth (%) PA 2005-2015`))
#melt from wide to long format
property_2005_2015<-property_2005_2015 %>%
gather(key=Year, value=`Median Price ($)`, -suburb, -lon, -lat, -state, -`Property Type`, -`Change 2014-2015 (%)`, -`Change 2005-2015 (%)`, -`Growth (%) PA 2005-2015`) %>%
mutate(`Median Price ($)`=as.numeric(`Median Price ($)`))
p2<-ggmap(Melbourne, maprange=TRUE, extent = "device", base_layer = ggplot(data = property_2005_2015, aes(x = lon, y = lat))) +
geom_point_interactive(data = property_2005_2015,
aes(x =lon, y= lat, size= `Change 2005-2015 (%)`,
colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=.5) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(1, 6), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Change in Median Melbourne \n Property Prices ($) from 2005-2015 \n") +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(face="bold"),
legend.text = element_text(face = "bold"),
strip.text.x = element_text(face="bold"),
plot.title = element_text(face = "bold"))
ggiraph(code = {print(p2)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7)
p2<-ggmap(Melbourne, maprange=TRUE, extent = "panel", base_layer = ggplot(data = property_2005_2015, aes(x = lon, y = lat))) +
geom_point_interactive(data = property_2005_2015,
aes(x =lon, y= lat, size= `Change 2005-2015 (%)`,
colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=.5) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(1, 6), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Change in Median Melbourne \n Property Prices ($) from 2005-2015 \n") +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(face="bold"),
legend.text = element_text(face = "bold"),
strip.text.x = element_text(face="bold"),
plot.title = element_text(face = "bold"))
ggiraph(code = {print(p2)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7)
p2<-ggmap(Melbourne, maprange=TRUE, extent = "panel", base_layer = ggplot(data = property_2005_2015, aes(x = lon, y = lat))) +
geom_point_interactive(data = property_2005_2015,
aes(x =lon, y= lat, size= `Change 2005-2015 (%)`,
colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=.5) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(1, 6), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Change in Median Melbourne \n Property Prices ($) from 2005-2015 \n")
ggiraph(code = {print(p2)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7)
test<-ggplot()+
geom_point_interactive(data = property_2005_2015,
aes(x =lon, y= lat, size= `Change 2005-2015 (%)`,
colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=.5) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(1, 6), trans = "identity", guide = "legend") +
facet_wrap(~`Property Type`) +
ggtitle("Change in Median Melbourne \n Property Prices ($) from 2005-2015 \n") +
theme(axis.title.x = element_blank(),
axis.text.x  =  element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.text.y  =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_text(face="bold"),
legend.text = element_text(face = "bold"),
strip.text.x = element_text(face="bold"),
plot.title = element_text(face = "bold"))
ggiraph(code = {print(test)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7)

facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>", df$state,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$: ", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
point_interactive_plot <- ggplot() +
geom_boxplot_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=state)) +
geom_point_interactive(data=df, mapping=aes(state, `Revenue ($)`,
colour=state,
tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(mapping=aes(colour=state,
tooltip=state)) +
geom_point_interactive(mapping=aes(colour=state,
tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=state)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
? summarise
? mean
df<-data_frame(state=rep(c("New South Wales",
"Victoria",
"Queensland",
"Western Australia",
"South Australia",
"Tasmania"), 36)) %>%
group_by(state) %>%
mutate(year=c(rep(2012, 9), rep(2013,9),rep(2014, 9),rep(2015, 9))) %>%
group_by(state, year) %>%
mutate(`store ID` = str_c("shop_#",as.character(seq_along(state)))) %>%
group_by(state, year, `store ID`) %>%
mutate(`Revenue ($)` =  ifelse(state=="New South Wales", sample(x=c(1000000:9000000), 1),
ifelse(state=="Victoria", sample(x=c(1000000:7000000), 1),
ifelse(state=="Queensland", sample(x=c(1000000:5000000), 1),
ifelse(state=="Western Australia",sample(x=c(100000:2000000), 1),
ifelse(state=="South Australia",sample(x=c(100000:900000), 1),
ifelse(state=="Tasmania", sample(x=c(100000:2000000), 1), NA))))))) %>%
group_by(state, year) %>%
mutate(`State Total Revenue ($)` = sum(`Revenue ($)`))
View(df)
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Create the text you want displayed in the tooltop for
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Make the plot, replacing 'geom_boxplot' and 'geom_point' with 'geom_boxplot_interactive' and 'geom_point_interactive'
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=tooltip_boxplot)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
head(df)
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggplot2", "stringr", "ggiraph", "dplyr")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
#Make up some fake data
df<-data_frame(state=rep(c("New South Wales",
"Victoria",
"Queensland",
"Western Australia",
"South Australia",
"Tasmania"), 36)) %>%
group_by(state) %>%
mutate(year=c(rep(2012, 9), rep(2013,9),rep(2014, 9),rep(2015, 9))) %>%
group_by(state, year) %>%
mutate(`store ID` = str_c("shop_#",as.character(seq_along(state)))) %>%
group_by(state, year, `store ID`) %>%
mutate(`Revenue ($)` =  ifelse(state=="New South Wales", sample(x=c(1000000:9000000), 1),
ifelse(state=="Victoria", sample(x=c(1000000:7000000), 1),
ifelse(state=="Queensland", sample(x=c(1000000:5000000), 1),
ifelse(state=="Western Australia",sample(x=c(100000:2000000), 1),
ifelse(state=="South Australia",sample(x=c(100000:900000), 1),
ifelse(state=="Tasmania", sample(x=c(100000:2000000), 1), NA))))))) %>%
group_by(state, year) %>%
mutate(`State Total Revenue ($)` = sum(`Revenue ($)`))
head(df)
#Create the text you want displayed in the tooltop for geom_point_interactive
df$tooltip_point <- paste0(
"<b>", df$`store ID`, "</b>",
"<br>(", df$state, ")",
"<br>Revenue:",
"<br>$", df$`Revenue ($)`,
"</span></div>"
)
#Create the text you want displayed in the tooltop for geom_boxplot_interactive
df$tooltip_boxplot <- paste0(
"<b>", df$state, "</b>",
"<br>State Total Revenue:",
"<br>$", df$`State Total Revenue ($)`,
"</span></div>"
)
#Make plot reactive to user's mouse with
#'geom_boxplot_interactive' and 'geom_point_interactive'
point_interactive_plot <- ggplot(df, aes(state, `Revenue ($)`)) +
geom_boxplot_interactive(aes(colour=state, tooltip=tooltip_boxplot)) +
geom_point_interactive(aes(colour=state, tooltip=tooltip_point)) +
theme(axis.title.x =  element_blank(),
axis.text.x  =  element_blank(),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=11),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
plot.title = element_text(face="bold", size=14)) +
ggtitle("Store Revenue per State from 2012 to 2015") +
facet_wrap(~year)
# htmlwidget call
ggiraph(code = {print(point_interactive_plot)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:red;",
tooltip_opacity = 0.7,
pointsize = 12)
? kable
kable(head(df))
### Install/load required packages
#List of R packages required for this analysis:
required_packages <- c("ggplot2", "stringr", "knitr", "dplyr", "ggiraph")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Set decimal points and disable scientific notation
options(digits=3, scipen=999)
kable(head(df))
install.packages("rgeos")
#Install required_packages:
required_packages <- c("ggmap", "ggplot2", "ggiraph")
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
#Make small example data set:
suburb<-c("BURNLEY","COLLINGWOOD","MALVERN","PRAHRAN","RICHMOND","SOUTH YARRA","ST KILDA","ST KILDA WEST","TOORAK","WINDSOR")
lon<-c(145.0176466,144.98815,145.036,144.998,144.998,144.989,144.982,144.9732,145.018,144.988)
lat<-c(-37.8299258, -37.8019,-37.857,-37.852,-37.823,-37.84,-37.864,-37.8604,-37.841,-37.854)
`Change 2005-2015 (%)`<-c(112, 120, 136, 127, 122, 115, 110, 146, 120, 128)
df<-data.frame(suburb, lon, lat, `Change 2005-2015 (%)`)
#Download map from google maps
SOUTH_YARRA <- get_map(location = 'South Yarra, Australia', zoom = 13, maptype="terrain")
ggmap(SOUTH_YARRA) +
geom_point(data = df,
aes(x =lon, y= lat, size=`Change 2005-2015 (%)`, colour = `Change 2005-2015 (%)`),
alpha=0.75) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(6, 12), trans = "identity", guide = "legend") +
ggtitle("Total change in Median \n House Price (%) from 2005-2015 \n")
#Try add reactivity using ggiraph's geom_point_interactive() instead of geom_point()
interactive_map<-ggmap(SOUTH_YARRA) +
geom_point_interactive(data = df,
aes(x =lon, y= lat, size=`Change 2005-2015 (%)`, colour = `Change 2005-2015 (%)`, tooltip=suburb, data_id = suburb),
alpha=0.75) +
scale_colour_gradientn(colours=rainbow(5)) +
scale_radius (range = c(6, 12), trans = "identity", guide = "legend") +
ggtitle("Total change in Median Melbourne \n House Price (%) from 2005-2015 \n")
ggiraph(code = {print(interactive_map)}, zoom_max = 5,
tooltip_offx = 20, tooltip_offy = -10,
hover_css = "fill:black;",
tooltip_opacity = 0.7)
install.packages("cowplot")
library(plotly)
library(ggplot2)
library(RColorBrewer)
library(grid)
library(cowplot)
df<-data.frame(x=runif(1000),y=runif(1000),z=rnorm(1000))
#function to extract the legend
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
View(df)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
p1 <-ggplot(df,aes(x=x,y=y,z=z))+ coord_fixed(ratio=1)+
stat_summary_hex(bins=100)+scale_fill_gradientn(colours=r)+ theme(legend.position="bottom")
p1leg<-g_legend(p1)
#using cowplot (the issue seems to be the same)
#p1leg<-cowplot::get_legend(p1)
p1<-p1+ theme(legend.position="none")
#print as ggplotly
ggplotly(p1)
grid.draw(p1leg)
ggplotly(p1)
p1 <-ggplot(df,aes(x=x,y=y,z=z))+ coord_fixed(ratio=1)+
stat_summary_hex(bins=100)+scale_fill_gradientn(colours=r)+ theme(legend.position="bottom")
ggplotly(p1)
p1
? ggplotly
p1leg
rasterGrob(p1leg, interpolate=TRUE)
p1 <-ggplot(df,aes(x=x,y=y,z=z))+ coord_fixed(ratio=1)+
stat_summary_hex(bins=100)+scale_fill_gradientn(colours=r)+ theme(legend.position="bottom")
p1
ggplotly(p1)
p2<-ggplotly(p1)
p2 %>% layout(legend = list(x = 0.5, y = 0))
ggplotly(p1, layout(legend = list(x = 0.5, y = 0)))
p2 %>% layout(legend = list(x = 0.5, y = 0))
list(x = 0.5, y = 0)
p2 %>% layout(legend = list(x = 0.5, y = 0))
library(dplyr)
p2 %>% layout(legend = list(x = 0.5, y = 0))
grid.draw(p1)
p1 <-ggplot(df,aes(x=x,y=y,z=z))+ coord_fixed(ratio=1)+
stat_summary_hex(bins=100)+scale_fill_gradientn(colours=r)+ theme(legend.position="bottom")
grid.draw(p1)
p1 <-ggplot(df,aes(x=x,y=y,z=z))+ coord_fixed(ratio=1)+
stat_summary_hex(bins=100)+scale_fill_gradientn(colours=r)+ theme(legend.position="bottom")
p2<-ggplotly(p1, layout(legend = list(x = 0.5, y = 0)))
p2<-ggplotly(p1)
grid.draw(p2)
p1 <- ggplot() +
geom_polygon(data = unemp.f,
aes(x = long, y = lat, group = group, fill = unemployment_rate),
color = "grey", size = 0.05) +
coord_equal() + labs(x = "X", y = "Y")
required_packages <- c("ggplot2", "ggiraph", "ggthemes", "rgdal", "readxl", "maptools", "dplyr","mapproj","maps")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices")
? readOGR
aus_dept <- readOGR(
dsn = "SSC_2011_AUST",
layer = "State Suburb", stringsAsFactors = FALSE
)
aus_dept <- readOGR(
dsn = "SSC_2011_AUST-shp",
layer = "State Suburb", stringsAsFactors = FALSE
)
aus_dept <- read.shp("SSC_2011_AUST.shp")
required_packages <- c("ggplot2", "ggiraph", "ggthemes", "rgdal", "readxl", "maptools", "dplyr","mapproj","maps", "shapefiles")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
aus_dept <- read.shp("SSC_2011_AUST.shp")
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices")
aus_dept <- read.shp("SSC_2011_AUST.shp")
? read.shp
aus_dept <- read.shapefile("SSC_2011_AUST.shp")
aus_dept <- read.shapefile("SSC_2011_AUST")
aus_dept <- read.shapefile("SSC_2011_AUST")
shape <- readOGR(dsn = ".", layer = "SSC_2011_AUST")
summary(shape)
download.file(
url = "http://osm13.openstreetmap.fr/~cquest/openfla/export/departements-20140306-100m-shp.zip",
destfile = "shapefiles/departements-20140306-100m-shp.zip"
)
unzip(zipfile = "shapefiles/departements-20140306-100m-shp.zip",
exdir = "shapefiles/departements-20140306-100m-shp")
? fortify
shape <- fortify(shape)
summary(shape)
class(shape)
summary(shape$id)
head(shape$id)
shape <- fortify(shape, region="SSC_NAME")
shape <- fortify(shape, region="SSC_NAME")
class(shape)
summary(shape$id)
head(shape$id)
Neighborhoods <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
required_packages <- c("ggplot2", "ggiraph", "ggthemes", "rgdal", "readxl", "maptools", "dplyr","mapproj","maps", "shapefiles")
Neighborhoods <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
? spTransform
Neighborhoods <-  rgdal::spTransform(shape)
Neighborhoods <-  rgdal::spTransform(shape)
Neighborhoods <-  spTransform(shape)
library(rgdal)
Neighborhoods <-  spTransform(shape)
shape <- readOGR(dsn = ".", layer = "SSC_2011_AUST")
summary(shape)
shape <- readOGR(dsn = ".", "SSC_2011_AUST")
Neighborhoods <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
Neighborhoods <- fortify(Neighborhoods)
summary(Neighborhoods)
View(Neighborhoods)
Australia <- get_map(location = 'Australia', zoom = 4, maptype="terrain")
BaltimoreMap <- AustraliaMap + geom_polygon(aes(x=long, y=lat, group=group), fill='grey', size=.2,color='green', data=Neighborhoods, alpha=0)
BaltimoreMap
library(ggmap)
Australia <- get_map(location = 'Australia', zoom = 4, maptype="terrain")
AustraliaMap <- Australia + geom_polygon(aes(x=long, y=lat, group=group), fill='grey', size=.2,color='green', data=Neighborhoods, alpha=0)
AustraliaMap
Australia + geom_polygon(aes(x=long, y=lat, group=group), fill='grey', size=.2,color='green', data=Neighborhoods, alpha=0)
setwd("C:/Users/Dan/Documents/GitHub/MelbournePropertyPrices")
required_packages <- c("ggplot2", "ggiraph", "ggthemes", "rgdal", "readxl", "maptools", "dplyr","mapproj","maps")
#Install required_packages:
new.packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#Load required_packages:
lapply(required_packages, require, character.only = TRUE)
shape <- readOGR(dsn = ".", "SSC_2011_AUST")
Neighborhoods <- spTransform(shape, CRS("+proj=longlat +datum=WGS84"))
Neighborhoods <- fortify(Neighborhoods)
Australia <- get_map(location = 'Australia', zoom = 4, maptype="terrain")
AustraliaMap <- Australia + geom_polygon(aes(x=long, y=lat, group=group), fill='grey', size=.2,color='green', data=Neighborhoods, alpha=0)
AustraliaMap
geocode("Baltimore, MD")
geocode("South Yarra, Australia")
? geocode
geocode("129 Alexandra Av, South Yarra, Australia")
